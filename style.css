:root{
  --clr-accent-400: hsl(12, 88%, 59%) ;
  --clr-accent-300: hsl(13, 100%, 96%) ;

  --clr-primary-400: hsl(228, 39%, 23%) ;

  --clr-neutral-900: hsl(232, 12%, 13%) ;
  --clr-neutral-100: hsl(0, 0%, 100%) ;

  /*ff is font family*/
  --ff-primary: 'Henny Penny', cursive;

  --ff-body: var(--ff-primary);
  --ff-heading: var(--ff-primary);

  /*fw is font weight*/
  --fw-regular: 400;
  --fw-semi-bold: 500;
  --fw-bold: 700;

  /*fs is font size. tip try to have font size not smaller than 16 pxss..*/ 
  --fs-300: 0.8125rem;
  --fs-400: 0.875rem;
  --fs-500: 0.9375rem;
  --fs-600: 1rem;
  --fs-700: 1.875rem;
  --fs-800: 2.5rem;
  --fs-900: 3.5rem;
  --fs-950: 4.0rem;
  --fs-1000: 4.5rem;

  --fs-body: var(--fs-400);
  --fs-primary-heading: var(--fs-800);
  --fs-secondary-heading: var(--fs-700);
  --fs-nav: var(--fs-500);
  --fs-button: var(--fs-300);

  --size-100: 0.25rem;
  --size-200: 0.5rem;
  --size-300: 0.75rem;
  --size-400: 1rem;
  --size-500: 1.5rem;
  --size-600: 2rem;
  --size-700: 3rem;
  --size-800: 4rem;
  --size-900: 5rem;
}

@media(min-width: 50em){
  :root{

    --fs-body: var(--fs-500);
    --fs-primary-heading: var(--fs-900);
    --fs-secondary-heading: var(--fs-800);
    --fs-nav: var(--fs-300);
  }
}
/* https://piccalil.li/blog/a-modern-css-reset

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

html,
body{
  height: 100%;
}
/* Set core body defaults */
body {
 
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}



/*************** general stylinggg */

.container{
  --max-width: 1100px;    /* custom variables */
  --padding: 1rem;

  width: min(var(--max-width), 100% - var(--padding)*2); /* 100% - var(--padding)*2) is for when screen is shrink, container will shrink together */
  margin-inline: auto;
}


/* ---this is for 2 columns in the container of main body */
.even-columns{
  display: grid;
  gap: 1.50rem;
}

.vertical-align-center{
  align-items: center;
}
.horizontal-align-center{
  justify-items: center;
}
.horizontal-align-center-self{
  justify-self: center;
}
.img-center {
  margin-left: auto;
  margin-right: auto;
}

.element-center {
  text-align: center;
}

@media (min-width: 50em){
  .even-columns{
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
  }
}

body{
  font-size: var(--fs-body);
  /* font-family: var(--ff-body); */
  color: var(--clr-neutral-900);
}

p{
  max-width: 50ch;
}

.button{
  display: inline-flex;
  border-radius: 0.5vmax;
  border-width: thin;
  /* border: 0; */
  padding: 0.5em 1.5em;
  font-weight: var(--fw-bold);
  font-size: var(--fs-button);
  text-decoration: none;
  background-color: white;
}
.button[data-type = "inverted"]{
   /* color: var(--clr-accent-400);
  background-color: var(--clr-neutral-100);   we switch bg color and text color*/
}
.button:hover,
.button:focus-visible{
  background-color: var(--clr-accent-300);
}


.background-video {
  position: relative;
  width:  100%;
  height:  50vh; 

  object-fit: cover;
  z-index: -1;
}


/* navigation */

.primary-header{
  padding-top: var(--size-700);
 
}

.nav-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.mobile-nav-toggle{
  display: none;
}

.nav-list{
  font-size: var(--fs-nav);
}

.nav-list {
  display: flex;
  gap: clamp(var(--size-400), 5vw, var(--size-700));
  font-weight: var(--fw-semi-bold);
}

.nav-list a {
  text-decoration: none;
  color: var(--clr-primary-400);
}



@media (max-width: 50em) {
  .primary-navigation{
    display: none;

    /* set up how navBar look like when hamburger is clicked  */
    position: fixed;
    padding: var(--size-700);
    inset: 10rem var(--size-400) auto;
    background-color: white;
    border: 1px solid black;
    border-radius: var(--size-300);
    /* max-width: 32rem;   Set size for navbar when clicked
    margin-inline: auto; make the nav bar center*/
    

    /* z-index: 1001; we need to do this since video has higher order */

  }

  .primary-header[data-overlay]::before{
    content: '';
    position: fixed;
    inset: 0;
    background-image: linear-gradient(rgb(0 0 0 /0), rgb(0 0 0 /1));
  }

  .nav-list{
    display: grid;
    gap: var(--size-600);
    text-align: center;
    font-weight: var(--fw-bold);
  }

  .nav-list a{
    text-decoration: none;
    color: var(--clr-primary-900);
  }

  .nav-list a:hover,
  .nav-list a:focus{
    color: red;
  }


  .primary-navigation[data-visible]{
    display: block;
  }
  .mobile-nav-toggle{
    display: block;
    position: fixed;
    top: var(--size-900);
    right: var(--size-400);
    cursor: pointer;
    background: transparent;
    border: 0;
    padding: 0.5em;
  }
  
  .mobile-nav-toggle .icon-close{
    display: none;
  }

  .container img {
    margin-left: auto;
    margin-right: auto;
  }

  .cta .sponsors-heading {
    text-align: center;
  }

  .center-align-s-size{
    justify-content: center;
  }
  .reason-heading {
    text-align: center;
    margin: auto;
  }

  .history div:nth-child(1){
    order: 2;
    outline: 3px saddlebrown solid;
  }

  .moblie-gap{
    column-gap: ;
  }

}

       /* sponsors */
.sponsors {
  display: grid;
  grid-template-columns:  1fr 1fr 1fr;
  gap: 1em;
}


/* this could be done with Js, but since it's not toolong, ill do the longway :V */
.sponsors > *:nth-child(2) {
  grid-column: 3;
}
.sponsors > *:nth-child(3) {
  grid-column: 2;
}

.sponsors > *:nth-child(4) {
  grid-column: 1;
}

.sponsors > *:nth-child(5) {
  grid-column: 3;
}

.sponsors > *:nth-child(6) {
  grid-column: 2;
}
.sponsors > *:nth-child(7) {
  grid-column: 1;
}
.sponsors > *:nth-child(8) {
  grid-column: 3;
}

      /* footer nav */

.footer-nav {
  columns: 2;
  column-gap: 3em;
}
      
.footer-nav a{
  text-decoration: none;
  color: var(--clr-neutral-900);
}

/* .footer-nav a:where(:hover, :focus){
  color: var(--clr-neutral-900);
} */


        /* social list */
.social-list {
  display: flex;
  justify-content: center;
  gap: var(--size-300);
}

.social-list li a {
  font-size: var(--fs-700);
  color: black;
}

/* .social-list a:is(:hover, :focus) .social-icon{
  
} */



/**************** Utility classes *****************/
 /* 	not:() does boost specificity, so use where to make its specificity = 0 */
:where(.flow :not(:first-child)){
  margin-top: var(--flow-spacer, 2em);
}


.visually-hidden {
  position: absolute;
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0,0,0,0) !important;
  white-space: nowrap !important;
  border: 0 !important;
  }
.text-primary-400{
  color: var(--clr-primary-400);
}

.text-accent-400{
  color: var(--clr-accent-400);
}
.text-accent-100{
  color: var(--clr-accent-100);
}

.text-neutral-100{
  color: var(--clr-neutral-100);
}

.text-neutral-900{
  color: var(--clr-neutral-900);
}

.bg-primary-400{
  background-color: var(--clr-primary-400);
}

.bg-accent-400{
  background-color: var(--clr-accent-400);
}
.bg-accent-100{
  background-color: var(--clr-accent-100);
}

.bg-neutral-100{
  background-color: var(--clr-accent-100);
}

.bg-neutral-900{
  background-color: var(--clr-accent-900);
}

.fw-bold{
  font-weight: var(--fw-bold);
}

.fw-semi-bold{
  font-weight: var(--fw-semi-bold);
}

.fw-regular{
  font-weight: var(--fw-regular);
}

.fs-primary-heading{
  font-size: var(--fs-primary-heading);
  line-height: 1.1;
}
.fs-secondary-heading{
  font-size: var(--fs-secondary-heading);
  line-height: 1.1;
}

.fs-300{ font-size: var(--fs-300);}
.fs-400{ font-size: var(--fs-400);}
.fs-500{ font-size: var(--fs-500);}
.fs-600{ font-size: var(--fs-600);}

.padding-block-900{
  padding-block: var(--size-900);
}
.padding-block-700{
  padding-block: var(--size-700);
}

.display-s-none{
  display: none;
}

@media(min-width: 50em){
  .display-md-inline-flex{
    display: inline-flex;
  }
}

:where(.flow > * + *){          /*where make it that every else can overwrite this*/
  margin-top: var(--flow-spacer, 1em);  /*2 param makes it that if flow-spacec not defined, 1em will be used*/
 }
